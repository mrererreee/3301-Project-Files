#include <xc.inc>
	goto start	

	; youtube shorts link: https://www.youtube.com/shorts/w3Bn5hwgK-Q
	; i updated the file to add the youtube link at 12:31am, just in case, but was originally updated at 11:56PM
	; Lab 3 Prelab
	psect code
N   equ	0x00	; Number of X's
Z   equ 0x60	; Final answer is stored here
X   equ 0x50	; Starting point of Xi array

start:	; load location 0x50 to 0x57 with arbitrary numbers for testing
	; you should also use "Memory Fill" to test it with zeros, ones, or even random numbers
	lfsr	0, X
	movlw	1
	movwf	POSTINC0, a
	movlw	2
	movwf	POSTINC0, a
	movlw	3
	movwf	POSTINC0, a
	movlw	4
	movwf	POSTINC0, a
	movlw	5
	movwf	POSTINC0, a
	movlw	6
	movwf	POSTINC0, a
	movlw	7
	movwf	POSTINC0, a
	movlw	8
	movwf	POSTINC0, a
	
    	; TODO: Your main program code starts here
	; 	- Use FSR1 to point to Xi
	;	- Call sum8 to generate the sum
	;	- Divide the resulting sum by 8 using rotate right with carry (you should reset the carry after each rotation)
	
	movlw 8
	movwf N, a
	clrf  Z, a
	call sum8
	
	rrcf    Z, f, a   ; Rotate 3 times to divide by 8
	bcf STATUS, 0, a; Reset carry
	rrcf	Z, f, a  ; Second rotation
	bcf STATUS, 0, a ; Reset carry
	rrcf	Z, f, a  ; Third rotation
	bcf STATUS, 0, a ; Reset carry
	
sum8:	
	lfsr 1, X
	
	loop: 
	    movf POSTINC1, w
	    addwfc Z, f, a
	    decfsz N, f, a
	    bnz loop
	    
	    return 
	
stop:	bra	stop
; TODO: Your subroutine program codes goes here

	
end



